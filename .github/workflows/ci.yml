name: CI

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      # Configure problem matchers for C++ build errors and warnings.
      - name: Setup Problem Matchers
        uses: Trass3r/setup-cpp@master

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          setup-python: false

      - name: Install clang-tidy
        run: sudo apt-get install clang-tidy
        if: runner.os == 'Linux'

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config $BUILD_TYPE --parallel 2

  clang-format:
    name: Check Code Formatting
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Code Formatting
        uses: DoozyX/clang-format-lint-action@v0.11
        with:
          source: src
          clangFormatVersion: 11
